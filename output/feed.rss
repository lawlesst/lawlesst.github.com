<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ted Lawless</title><link>https://lawlesst.github.io/</link><description></description><atom:link href="https://lawlesst.github.io/feed.rss" rel="self"></atom:link><lastBuildDate>Sun, 16 Nov 2014 00:00:00 -0500</lastBuildDate><item><title>Using Pelican for a Gitub personal page</title><link>https://lawlesst.github.io/notebook/pelican.html</link><description>&lt;p&gt;Notes on converting this Github user page based site to &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;, a Python based static site generator.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ted Lawless</dc:creator><pubDate>Sun, 16 Nov 2014 00:00:00 -0500</pubDate><guid>tag:lawlesst.github.io,2014-11-16:notebook/pelican.html</guid></item><item><title>Connecting Python's RDFLib and Stardog</title><link>https://lawlesst.github.io/notebook/rdflib-stardog.html</link><description>&lt;hr /&gt;
&lt;p&gt;For a couple of years I have been working with the Python &lt;a href="https://github.com/RDFLib/rdflib"&gt;RDFLib&lt;/a&gt; library for converting data from various formats to RDF.  This library serves this work well but it's sometimes difficult to track down a straightforward, working example of performing a particular operation or task in RDFLib.  I ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ted Lawless</dc:creator><pubDate>Thu, 06 Nov 2014 00:00:00 -0500</pubDate><guid>tag:lawlesst.github.io,2014-11-06:notebook/rdflib-stardog.html</guid></item><item><title>Python and JSON-LD</title><link>https://lawlesst.github.io/notebook/python-jsonld.html</link><description>&lt;hr /&gt;
&lt;p&gt;I've published some &lt;a href="https://github.com/lawlesst/vivo-sample-data"&gt;code&lt;/a&gt; for mapping CSV data to RDF using Python and JSON-LD on &lt;a href="https://github.com/lawlesst/vivo-sample-data"&gt;Github&lt;/a&gt;.  The motivation for this work was:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;to provide sample data to help people get started with &lt;a href="http://www.vivoweb.org/"&gt;VIVO&lt;/a&gt;, the research profile system built on Semantic Web standards&lt;/li&gt;
&lt;li&gt;to learn more about &lt;a href="http://www.w3.org/TR/json-ld/"&gt;JSON-LD&lt;/a&gt; and explore ...&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ted Lawless</dc:creator><pubDate>Sun, 03 Aug 2014 00:00:00 -0400</pubDate><guid>tag:lawlesst.github.io,2014-08-03:notebook/python-jsonld.html</guid></item><item><title>An OpenRefine reconciliation service for academic journal data</title><link>https://lawlesst.github.io/notebook/journaltoc-reconcile.html</link><description>&lt;hr /&gt;
&lt;p&gt;Recently I've been working to link local data stored in &lt;a href="http://vivoweb.org"&gt;VIVO&lt;/a&gt; as RDF with other sources on the Web.  The &lt;a href="http://refine.deri.ie/docs"&gt;RDF Refine extension&lt;/a&gt; for &lt;a href="http://openrefine.org/"&gt;OpenRefine&lt;/a&gt;&lt;sup id="fnref:refine"&gt;&lt;a class="footnote-ref" href="#fn:refine" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; has been a useful tool in this work.  OpenRefine allows you to query a &lt;a href="https://github.com/OpenRefine/OpenRefine/wiki/Reconciliation-Service-API"&gt;reconciliation service&lt;/a&gt; to match local strings to entities from ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ted Lawless</dc:creator><pubDate>Wed, 07 Aug 2013 00:00:00 -0400</pubDate><guid>tag:lawlesst.github.io,2013-08-07:notebook/journaltoc-reconcile.html</guid></item><item><title>Solr Document Signatures</title><link>https://lawlesst.github.io/notebook/solr-etags.html</link><description>&lt;hr /&gt;
&lt;p&gt;I previously &lt;a href="http://lawlesst.github.com/notebook/vivo-caching.html"&gt;wrote&lt;/a&gt; about working with Apache &lt;a href="http://httpd.apache.org/docs/2.2/caching.html"&gt;mod_cache&lt;/a&gt;, HTTP &lt;a href="http://en.wikipedia.org/wiki/HTTP_ETag"&gt;ETags&lt;/a&gt;, and &lt;a href="http://www.vivoweb.org/"&gt;VIVO&lt;/a&gt; to cache public pages.  After writing that post, I found that &lt;a href="http://wiki.apache.org/solr/Deduplication"&gt;Solr supports adding "signatures" to documents&lt;/a&gt; as a way to identify if a document is identical to another.  This &lt;a href="http://wiki.apache.org/solr/Deduplication"&gt;feature&lt;/a&gt; was added to Solr as a way ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ted Lawless</dc:creator><pubDate>Fri, 29 Mar 2013 00:00:00 -0400</pubDate><guid>tag:lawlesst.github.io,2013-03-29:notebook/solr-etags.html</guid></item><item><title>Caching VIVO profiles with ETags and mod_cache</title><link>https://lawlesst.github.io/notebook/vivo-caching.html</link><description>&lt;hr /&gt;
&lt;style&gt;.clean-gray{
border:solid 1px #DEDEDE; 
background:#EFEFEF;
color:#222222;
padding:.5em;
}
&lt;/style&gt;

&lt;div class="clean-gray"&gt;Update - 3/29/13 - since writing this, I learned about Solr's built in support for generating signatures of document contents.  Taking advantage of this feature of Solr simplifies the servlet filter code described below and addresses one of ...&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ted Lawless</dc:creator><pubDate>Mon, 25 Mar 2013 00:00:00 -0400</pubDate><guid>tag:lawlesst.github.io,2013-03-25:notebook/vivo-caching.html</guid></item><item><title>A utility script for developing VIVO custom list views</title><link>https://lawlesst.github.io/notebook/vivo-listview.html</link><description>&lt;hr /&gt;
&lt;p&gt;As you continue with your &lt;a href="http://www.vivoweb.org/"&gt;VIVO&lt;/a&gt; implementation, you might want to adjust the properties that are displayed on profile pages.  VIVO handles what properties display on a profile page through a set of list views, which are SPARQL queries that pull data from your VIVO store and pass it on ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ted Lawless</dc:creator><pubDate>Mon, 18 Mar 2013 00:00:00 -0400</pubDate><guid>tag:lawlesst.github.io,2013-03-18:notebook/vivo-listview.html</guid></item><item><title>Using Z39.50 to produce a Stack View.</title><link>https://lawlesst.github.io/notebook/z3950-scan.html</link><description>&lt;hr /&gt;
&lt;p&gt;The &lt;a href="http://librarylab.law.harvard.edu/"&gt;Harvard Library Innovation Lab&lt;/a&gt; has developed a library browsing tool called &lt;a href="http://librarylab.law.harvard.edu/blog/stack-view/"&gt;Stack View&lt;/a&gt;.  It provides a way to virtual browse through a collection of items from a library.&lt;/p&gt;
&lt;p&gt;The examples on the Stack View website show how to pull data in from a variety of sources and example scripts ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ted Lawless</dc:creator><pubDate>Fri, 08 Feb 2013 00:00:00 -0500</pubDate><guid>tag:lawlesst.github.io,2013-02-08:notebook/z3950-scan.html</guid></item><item><title>Reading and writing RDF for VIVO with RDFAlchemy</title><link>https://lawlesst.github.io/notebook/vivo-rdfalchemy.html</link><description>&lt;hr /&gt;
&lt;p&gt;For the last few months I have been working on converting a diverse set of data about the university and its faculty into RDF for import into &lt;a href="http://www.vivoweb.org/"&gt;VIVO&lt;/a&gt;, the semantic web application.  The workflow generally consists of mapping the incoming data to the VIVO ontology(s) and then writing a ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ted Lawless</dc:creator><pubDate>Wed, 02 Jan 2013 00:00:00 -0500</pubDate><guid>tag:lawlesst.github.io,2013-01-02:notebook/vivo-rdfalchemy.html</guid></item><item><title>A Python module for placing requests in ILLiad</title><link>https://lawlesst.github.io/notebook/illiad-api.html</link><description>&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;This post describes a &lt;a href="https://github.com/lawlesst/illiad-api"&gt;Python module&lt;/a&gt; for creating requests in &lt;a href="http://www.atlas-sys.com/illiad/"&gt;ILLiad&lt;/a&gt;, the interlibrary loan software used in libraries.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Many libraries use &lt;a href="http://www.atlas-sys.com/illiad/"&gt;ILLiad&lt;/a&gt; as the software system for document delivery and interlibrary loan services.  As a developer working with this system, you might find a need to create ILLiad requests programmatically ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ted Lawless</dc:creator><pubDate>Mon, 31 Dec 2012 00:00:00 -0500</pubDate><guid>tag:lawlesst.github.io,2012-12-31:notebook/illiad-api.html</guid></item><item><title>Free text citations to library content</title><link>https://lawlesst.github.io/notebook/citation-finder.html</link><description>&lt;hr /&gt;
&lt;p&gt;On October 11, &lt;a href="http://crossref.org/"&gt;CrossRef&lt;/a&gt; &lt;a href="http://labs.crossref.org/site/crossref_metadata_search.html"&gt;announced&lt;/a&gt; a new metadata search service and &lt;a href="http://search.labs.crossref.org/help/api"&gt;API&lt;/a&gt;.  Jonathan Rochkind has a nice &lt;a href="http://bibwild.wordpress.com/2012/10/11/new-crossref-metadata-search-with-api/"&gt;writeup&lt;/a&gt; on the possibilities of integrating such a service with library software.  Jonathan writes the following in reference to the "links" feature which will take an unstructured citation and attempt to resolve it ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ted Lawless</dc:creator><pubDate>Wed, 17 Oct 2012 00:00:00 -0400</pubDate><guid>tag:lawlesst.github.io,2012-10-17:notebook/citation-finder.html</guid></item><item><title>Using Python and Pyjnius to connect to Jena models</title><link>https://lawlesst.github.io/notebook/pyjniusvivo.html</link><description>&lt;hr /&gt;
&lt;p&gt;I’m loading data into &lt;a href="http://vivoweb.org/"&gt;VIVO&lt;/a&gt;, an application built with the &lt;a href="http://jena.apache.org/"&gt;Jena Framework&lt;/a&gt;.  The VIVO web application comes with a nice set of bulk loading tools through an administrative interface.  However in the current VIVO release (1.5) there aren't web services or other tools for performing operations programatically ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ted Lawless</dc:creator><pubDate>Wed, 03 Oct 2012 00:00:00 -0400</pubDate><guid>tag:lawlesst.github.io,2012-10-03:notebook/pyjniusvivo.html</guid></item><item><title>Focusing on Delivery</title><link>https://lawlesst.github.io/notebook/delivery.html</link><description>&lt;hr /&gt;
&lt;p&gt;A &lt;a href="https://twitter.com/hochstenbach/status/251929102024597504"&gt;Twitter exchange&lt;/a&gt; between &lt;a href="https://twitter.com/intent/user?screen_name=hochstenbach"&gt;Patrick Hochstenbach&lt;/a&gt; and &lt;a href="https://twitter.com/rcallewaert"&gt;Rosemie Callewaert
&lt;/a&gt; voiced the opinion that library "discovery systems should focus more on delivery".  I agree - completely - and would like to describe some of the work I've been a part of recently that focuses on delivery of library content. &lt;/p&gt;
&lt;p&gt;At the Brown ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ted Lawless</dc:creator><pubDate>Sun, 30 Sep 2012 00:00:00 -0400</pubDate><guid>tag:lawlesst.github.io,2012-09-30:notebook/delivery.html</guid></item><item><title>Django, Heroku, and the 360Link API</title><link>https://lawlesst.github.io/notebook/heroku360link.html</link><description>&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;This post describes a &lt;a href="http://damp-tor-3124.herokuapp.com/"&gt;demo application&lt;/a&gt; that serves as a front-end to the &lt;a href="http://www.serialssolutions.com/en/services/360-link"&gt;360Link OpenURL resolver&lt;/a&gt;
from Serials Solutions.  The code is available on &lt;a href="https://github.com/lawlesst/dj360link"&gt;Github&lt;/a&gt; and the application is running on Heroku.    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A recent &lt;a href="http://serials.infomotions.com/code4lib/archive/2012/201209/2516.html"&gt;thread&lt;/a&gt; on the Code4Lib mailing list discussed technical details of the &lt;a href="http://www.serialssolutions.com/en/services/360-link"&gt;360Link &lt;/a&gt; OpenURL resolver.  The technical ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ted Lawless</dc:creator><pubDate>Tue, 11 Sep 2012 00:00:00 -0400</pubDate><guid>tag:lawlesst.github.io,2012-09-11:notebook/heroku360link.html</guid></item></channel></rss>